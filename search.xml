<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>xv6 book 笔记</title>
      <link href="/2024/09/de32e36c091a.html"/>
      <url>/2024/09/de32e36c091a.html</url>
      
        <content type="html"><![CDATA[<h1 id="xv6-book-笔记"><a href="#xv6-book-笔记" class="headerlink" title="xv6 book 笔记"></a>xv6 book 笔记</h1><p>&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</p><h2 id="chapter-2"><a href="#chapter-2" class="headerlink" title="chapter 2"></a>chapter 2</h2><h3 id="operating-system-organization"><a href="#operating-system-organization" class="headerlink" title="operating system organization"></a>operating system organization</h3><p>There are three key requirements must fulfilled：multiplexing, isolation, and interaction.</p><p>This chapter will demonstrate above three requirements by providing an overview of xv6’s process (unit of isolation) and the creation of the first process when xv6 starts.</p><p>XV6 is written in ‘LP64’C, which means long (L) and pointers (P) in the C programming language are 64 bits, but an int is 32 bits.</p><h3 id="2-1-abstracting-physical-resources"><a href="#2-1-abstracting-physical-resources" class="headerlink" title="2.1 abstracting physical resources"></a>2.1 abstracting physical resources</h3>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 英语 </tag>
            
            <tag> OS </tag>
            
            <tag> xv6 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>6.1810 学习资料</title>
      <link href="/2024/07/71be7340dd9b.html"/>
      <url>/2024/07/71be7340dd9b.html</url>
      
        <content type="html"><![CDATA[<h1 id="6-1810-学习资料"><a href="#6-1810-学习资料" class="headerlink" title="6.1810 学习资料"></a>6.1810 学习资料</h1><p>&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</p><p><strong><a href="https://pdos.csail.mit.edu/6.828/2024/">官网</a></strong><br><strong>教材：<a href="https://pdos.csail.mit.edu/6.828/2024/xv6/book-riscv-rev4.pdf">xv6 book</a></strong><br><strong>B站视频：<a href="https://www.bilibili.com/video/BV19k4y1C7kA?p=1&vd_source=663806180f4de3dcdba03f194f1b2c9e">MIT 6.S081 2020 操作系统 [中英文字幕]</a></strong></p><h2 id="LEC-1-rtm"><a href="#LEC-1-rtm" class="headerlink" title="LEC 1 (rtm):"></a>LEC 1 (rtm):</h2><h3 id="Introduction-and-examples-handouts-xv6-book-2020-video"><a href="#Introduction-and-examples-handouts-xv6-book-2020-video" class="headerlink" title="Introduction and examples (handouts: xv6 book; 2020: video)"></a><a href="https://pdos.csail.mit.edu/6.828/2021/slides/6s081-lec-intro.pdf">Introduction</a> and examples (handouts: xv6 book; 2020: video)</h3><p>Preparation: Read chapter 1 (for your amusement: Unix)<br>Assignment: <a href="https://pdos.csail.mit.edu/6.828/2024/labs/util.html">Lab util: Unix utilities</a></p><h3 id="任务列表："><a href="#任务列表：" class="headerlink" title="任务列表："></a>任务列表：</h3><p>-[] Read chapter 1<br>-[] video:Lecture 1 - Introduction and Examples<br>-[] Lab util: Unix utilities<br>    -[] Boot xv6<br>    -[] sleep<br>    -[] pingpong<br>    -[] primes<br>    -[] find<br>    -[] xargs</p><h2 id="LEC-2-fk"><a href="#LEC-2-fk" class="headerlink" title="LEC 2 (fk):"></a>LEC 2 (fk):</h2><h3 id="C-in-xv6-slides-c-gdb-and-examples"><a href="#C-in-xv6-slides-c-gdb-and-examples" class="headerlink" title="C in xv6, slides,c, gdb,and examples"></a><a href="https://pdos.csail.mit.edu/6.828/2021/lec/6S081-Intro-to-C-Fa21.pdf">C in xv6</a>, <a href="https://pdos.csail.mit.edu/6.828/2024/lec/l-c_slides.pdf">slides</a>,<a href="https://pdos.csail.mit.edu/6.828/2021/lec/6S081-Intro-to-C-Fa21.pdf">c</a>, <a href="https://pdos.csail.mit.edu/6.828/2021/lec/gdb_slides.pdf">gdb</a>,and examples</h3><p>Preparation: 2.9 (Bitwise operators) and 5.1 (Pointers and addresses) through 5.6 (Pointer arrays) and 6.4 (pointers to structures) by Kernighan and Ritchie (K&amp;R)</p><h3 id="任务列表：-1"><a href="#任务列表：-1" class="headerlink" title="任务列表："></a>任务列表：</h3><p>-[] C in xv6<br>-[] slides<br>-[] c<br>-[] gdb</p><h2 id="LEC-3-fk"><a href="#LEC-3-fk" class="headerlink" title="LEC 3 (fk):"></a>LEC 3 (fk):</h2><h3 id="OS-design-OS-organization-and-system-calls-2020-video"><a href="#OS-design-OS-organization-and-system-calls-2020-video" class="headerlink" title="OS design,OS organization and system calls (2020: video)"></a>OS design,<a href="https://pdos.csail.mit.edu/6.828/2021/slides/6s081-lec-osorg.pdf">OS organization and system calls</a> (2020: video)</h3><p>Preparation: Read chapter 2 and xv6 code: <a href="https://github.com/mit-pdos/xv6-riscv/blob/riscv/kernel/proc.h">kernel&#x2F;proc.h</a>, <a href="https://github.com/mit-pdos/xv6-riscv/blob/riscv/kernel/defs.h">kernel&#x2F;defs.h</a>, <a href="https://github.com/mit-pdos/xv6-riscv/blob/riscv/kernel/entry.S">kernel&#x2F;entry.S</a>, <a href="https://github.com/mit-pdos/xv6-riscv/blob/riscv/kernel/main.c">kernel&#x2F;main.c</a>, <a href="https://github.com/mit-pdos/xv6-riscv/blob/riscv/user/initcode.S">user&#x2F;initcode.S</a>, <a href="https://github.com/mit-pdos/xv6-riscv/blob/riscv/user/init.c">user&#x2F;init.c</a>, and skim <a href="https://github.com/mit-pdos/xv6-riscv/blob/riscv/kernel/proc.c">kernel&#x2F;proc.c</a> and <a href="https://github.com/mit-pdos/xv6-riscv/blob/riscv/kernel/exec.c">kernel&#x2F;exec.c</a><br>Assignment: <a href="https://pdos.csail.mit.edu/6.828/2024/labs/syscall.html">Lab syscall: System calls(24)</a><a href="https://pdos.csail.mit.edu/6.828/2021/labs/syscall.html">21</a></p><h3 id="任务列表：-2"><a href="#任务列表：-2" class="headerlink" title="任务列表："></a>任务列表：</h3><p>-[] Read chapter 2<br>-[] video:Lecture 3 - OS Organization and System Calls<br>-[] Lab syscall: System calls<br>    -[] Using gdb<br>    -[] System call tracing<br>    -[] Attack xv6<br>    -[] Sysinfo</p><p>LEC 4 (fk): page tables<br>Preparation: Read Chapter 3 and kernel&#x2F;memlayout.h, kernel&#x2F;vm.c, kernel&#x2F;kalloc.c, kernel&#x2F;riscv.h, and kernel&#x2F;exec.c</p><p>LEC 4 (ab): Page tables (2020: notes, boards, video)<br>Preparation: Read Chapter 3 and kernel&#x2F;memlayout.h, kernel&#x2F;vm.c, kernel&#x2F;kalloc.c, kernel&#x2F;riscv.h, and kernel&#x2F;exec.c</p><p>LEC 5 (rtm): System call entry&#x2F;exit<br>Preparation: Read Chapter 4, except 4.6 and kernel&#x2F;riscv.h, kernel&#x2F;trampoline.S, and kernel&#x2F;trap.c<br>Assignment: Lab pgtbl: Page tables</p><p>LEC 5 (TAs): GDB, calling conventions and stack frames RISC-V (2020: notes, boards, video)<br>Preparation: Read Calling Convention<br>Assignment: Lab pgtbl: Page tables</p><p>LEC 6 (TAs): GDB Calling conventions<br>Preparation: Read Calling Convention</p><p>LEC 6 (ab): Isolation &amp; system call entry&#x2F;exit (2020: notes, video)<br>Preparation: Read Chapter 4, except 4.6 and kernel&#x2F;riscv.h, kernel&#x2F;trampoline.S, and kernel&#x2F;trap.c</p><p>LEC 7 (fk): Page faults (slides)<br>Preparation: Read Section 4.6<br>Assignment: Lab traps: Traps</p><p>LEC 7 (ab): Page faults (2020: notes, boards, video)<br>Preparation: Read Section 4.6<br>Assignment: Lab traps: Traps</p><p>LEC 8 (fk): Q&amp;A labs (slides)</p><p>LEC 8 (ab): Q&amp;A labs</p><p>LEC 9 (fk): Device drivers<br>Preparation: Read Chapter 5 and kernel&#x2F;kernelvec.S, kernel&#x2F;plic.c, kernel&#x2F;console.c, kernel&#x2F;uart.c, kernel&#x2F;printf.c<br>Assignment: Lab cow: Copy-on-write fork</p><p>LEC 9 (ab): Interrupts (2020: notes, boards, video)<br>Preparation: Read Chapter 5 and kernel&#x2F;kernelvec.S, kernel&#x2F;plic.c, kernel&#x2F;console.c, kernel&#x2F;uart.c, kernel&#x2F;printf.c<br>Assignment: Lab cow: Copy-on-write fork</p><p>LEC 10 (fk): Locking<br>Preparation: Read “Locking” with kernel&#x2F;spinlock.h and kernel&#x2F;spinlock.c</p><p>LEC 10 (ab): Multiprocessors and locking (2020: notes, boards, video)<br>Preparation: Read “Locking” with kernel&#x2F;spinlock.h and kernel&#x2F;spinlock.c</p><p>LEC 11 (rtm): Scheduling 1<br>Preparation: Read “Scheduling” through Section 7.4, and kernel&#x2F;proc.c, kernel&#x2F;swtch.S</p><p>LEC 11 (ab): Scheduling 1 (2020: notes, video)<br>Preparation: Read “Scheduling” through Section 7.4, and kernel&#x2F;proc.c, kernel&#x2F;swtch.S</p><p>LEC 12 (rtm): Coordination, code<br>Preparation: Read remainder of “Scheduling”, and corresponding parts of kernel&#x2F;proc.c, kernel&#x2F;sleeplock.c</p><p>LEC 12 (ab): Scheduling 2 (2020: notes, code, video)<br>Preparation: Read remainder of “Scheduling”, and corresponding parts of kernel&#x2F;proc.c, kernel&#x2F;sleeplock.c<br>Assignment: Lab thread: Multithreading</p><p>LEC 13 (fk): File systems (slides)<br>Preparation: Read kernel&#x2F;bio.c, kernel&#x2F;fs.c, kernel&#x2F;sysfile.c, kernel&#x2F;file.c and “File system” (except for the logging sections)</p><p>LEC 13 (ab): Q&amp;A labs</p><p>Midterm open book and notes<br>scope: Lectures 1 through 12, labs through lab cow<br>practice: previous quizzes.<br>Assignment: Lab net: Network driver</p><p>LEC 14 (fk): Crash recovery (slides)<br>Preparation: Read kernel&#x2F;log.c and the logging sections of the “File system” chapter</p><p>LEC 14 (ab): File systems (2020: notes, boards, video)<br>Preparation: Read kernel&#x2F;bio.c, kernel&#x2F;fs.c, kernel&#x2F;sysfile.c, kernel&#x2F;file.c and “File system” (except for the logging sections)<br>Assignment: Lab net: Network driver</p><p>LEC 15 (rtm): File system performance and fast crash recovery<br>Preparation: Read Journaling the Linux ext2fs Filesystem (1998)</p><p>LEC 15 (ab): Crash recovery (2020: notes, boards, video)<br>Preparation: Read kernel&#x2F;log.c and the logging sections of “File system”</p><p>Hacking day: no class meeting; work on the lab<br>Assignment: Lab lock: Parallelism&#x2F;locking</p><p>LEC 16 (fk): Virtual memory for applications (baker example) (slides)<br>Preparation: Read Virtual Memory Primitives for User Programs (1991)<br>Assignment: Lab fs: File system</p><p>LEC 16 (ab): File system performance and fast crash recovery (2020: notes, video)<br>Preparation: Read Journaling the Linux ext2fs Filesystem (1998)</p><p>LEC 17 (rtm): OS Organization<br>Preparation: Read The Performance of micro-Kernel-Based Systems (1997)</p><p>LEC 17 (ab): Virtual memory for applications (2020: notes, boards, video) (baker example)<br>Preparation: Read Virtual Memory Primitives for User Programs (1991)</p><p>DROP DATE<br>LEC 18 (rtm): Virtual Machines<br>Preparation: Read Dune: Safe User-level Access to Privileged CPU Features (2012)<br>Hacking day: no class meeting; work on the lab<br>Assignment: Lab mmap: Mmap</p><p>LEC 18 (ab): OS Organization (2020: notes, video)<br>Preparation: Read The Performance of micro-Kernel-Based Systems (1997)<br>Assignment: Lab lock: Parallelism&#x2F;locking</p><p>LEC 19 (fk): Kernels and HLL<br>Preparation: Read the Biscuit paper (2018), FAQ</p><p>LEC 19 (ab): Virtual Machines (2020: notes, video)<br>Preparation: Read Dune: Safe User-level Access to Privileged CPU Features (2012)</p><p>LEC 20 (rtm): Networking<br>Preparation: Read Receive Livelock (1996)</p><p>LEC 20 (ab): Kernels and HLL] (2020: notes, slides, video)<br>Preparation: Read the Biscuit paper (2018), FAQ<br>Assignment: Lab fs: File system</p><p>LEC 21 (rtm): Meltdown<br>Preparation: Read Meltdown (2018)</p><p>LEC 21 (ab): Networking (2020: notes, video)<br>Preparation: Read Receive Livelock (1996)</p><p>Hacking day: no class meeting; work on the lab<br>DUE: Lab fs<br>Assignment: Lab mmap: Mmap</p><p>LEC 22 (rtm): Multi-Core scalability and RCU<br>Preparation: Read RCU paper (2013), FAQ</p><p>LEC 22 (ab): Meltdown (2020: notes, video)<br>Preparation: Read Meltdown (2018)</p><p>LAST DAY OF CLASSES<br>LEC 23 (tbd): Current Research</p><p>LEC 23 (ab): Multi-Core scalability and RCU (2020: notes, video)<br>Preparation: Read RCU paper (2013), FAQ</p><p>LEC 24 (TAs): Current Research: Radiation Tolerance<br>Preparation: Read NASA CALIPSO paper (2006) for background</p>]]></content>
      
      
      <categories>
          
          <category> 记录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> OS </tag>
            
            <tag> xv6 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
